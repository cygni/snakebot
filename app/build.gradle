buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gorylenko.gradle-git-properties:gradle-git-properties:2.4.1"
    }
}

plugins {
    id 'info.solidsoft.pitest'
    id "com.gorylenko.gradle-git-properties" version "2.0.0"
    id 'com.bmuschko.docker-remote-api' version '4.8.0'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'maven-publish'

// No need to upload this JAR, it is not a dependency to any other
// Also, the repo does not allow files larger than 32MB
//uploadArchives.enabled = false

jar {
    archivesBaseName = 'app'
}

processResources {
    filesMatching('**/*.properties') { expand(project.properties) }
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

project.ext {
    builddate = new Date()
    buildnumber = "$System.env.BUILD_NUMBER"
}

springBoot {
    buildInfo()
}

pitest {
    targetClasses = ['se.cygni.snake.*']
    threads = 4
    outputFormats = ['XML', 'HTML']
}

dependencies {
    implementation project(':domain')
    implementation project(':api')
    implementation project(':client-util')
  
    implementation("org.elasticsearch:elasticsearch:$elasticSearchVersion")

    implementation("com.google.guava:guava:$guavaVersion")
    
    implementation("commons-beanutils:commons-beanutils:$commonsBeanutilsVersion")
        
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-jersey')
    implementation('org.springframework.boot:spring-boot-starter-websocket')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-jetty')


    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
    testImplementation("org.mockito:mockito-core:${mockitoVersion}")
}

tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test*.class" 
}

import com.bmuschko.gradle.docker.tasks.image.*

task(buildDockerImage, type: DockerBuildImage) {
    inputDir = file('.')
    tags.addAll(['snake-bot:latest', 'docker.snake.cygni.se:5000/snake-bot:latest', 
    	"docker.snake.cygni.se:5000/snake-bot:${version}"])
}

task(pushDockerLatestImage, type: DockerPushImage) {
	imageName = 'docker.snake.cygni.se:5000/snake-bot'
	tag ='latest'
}

task(pushDockerVersionImage, type: DockerPushImage) {
	imageName = 'docker.snake.cygni.se:5000/snake-bot'
	tag ="${version}"
}

task(dockerBuildAndPush) {
	dependsOn buildDockerImage
	dependsOn pushDockerLatestImage
	dependsOn pushDockerVersionImage
}
